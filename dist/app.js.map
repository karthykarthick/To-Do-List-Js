{"version":3,"sources":["webpack://To-Do-List-Js/./src/scss/styles.scss","webpack://To-Do-List-Js/./src/components/Project.js","webpack://To-Do-List-Js/./src/components/Todos.js","webpack://To-Do-List-Js/./src/components/Ui.js","webpack://To-Do-List-Js/./src/components/storage.js","webpack://To-Do-List-Js/webpack/bootstrap","webpack://To-Do-List-Js/webpack/runtime/define property getters","webpack://To-Do-List-Js/webpack/runtime/hasOwnProperty shorthand","webpack://To-Do-List-Js/webpack/runtime/make namespace object","webpack://To-Do-List-Js/./src/index.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;ACAmD;AACV;;AAElC;AACP;AACA;AACA;AACA;AACA,MAAM,mDAAa;AACnB;AACA,UAAU,kDAAY;AACtB,UAAU,yDAAe;AACzB,UAAU,sDAAc;AACxB;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oDAAoD,iBAAiB;AACrE;AACA;;;AAGA;AACA,IAAI,gDAAU;AACd,sBAAsB,iBAAiB;AACvC,UAAU,kDAAY;AACtB;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,IAAI,yDAAe;AACnB;AACA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;AC/C4B;AACnD,WAAW,aAAa;;AAEjB;;AAEA;AACP,2CAA2C,IAAI;AAC/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iDAAiD,wBAAwB;AACzE;AACA;AACA,QAAQ;AACR,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2CAAK;AACT,IAAI,2CAAK;AACT,IAAI,2CAAK;AACT,IAAI,2CAAK;AACT,IAAI,yDAAe;AACnB,GAAG;AACH;;AAEO;AACP;AACA;;AAEA;AACA;AACA,wBAAwB,2CAAK;AAC7B;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA,0BAA0B,2CAAK;AAC/B;AACA;AACA;AACA,MAAM,2CAAK;AACX,MAAM,yDAAe;AACrB,KAAK;AACL,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iDAAiD,yBAAyB;AAC1E;AACA;AACA,iDAAiD,WAAW;AAC5D,uDAAuD,iBAAiB;AACxE,oDAAoD,aAAa;AACjE,oDAAoD,cAAc;AAClE;AACA,uEAAuE,WAAW;AAClF,8EAA8E,yBAAyB;AACvG,wEAAwE,yBAAyB;AACjG;AACA;AACA;AACA;;AAEA;AACA,IAAI,2CAAK;AACT;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,yDAAe;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,IAAI,EAAC;;;;;;;;;;;;;;;;;;ACxI6B;AACc;;AAExD;;AAEQ;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,qDAAe;AACpC;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,qDAAe,OAAO,oDAAY;AACvD;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,IAAI,2CAAK;AACT;AACA;AACA,kDAAkD,oDAAY,aAAa;AAC3E;AACA;AACA,kDAAkD,WAAW;AAC7D,wDAAwD,iBAAiB;AACzE,qDAAqD,aAAa;AAClE,oDAAoD,cAAc;AAClE;AACA,uEAAuE,WAAW;AAClF,8EAA8E,WAAW;AACzF,wEAAwE,oDAAY,aAAa;AACjG;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI,oDAAY;AAChB,IAAI,gDAAQ;AACZ;AACA;;;AAGA;AACA,IAAI,uDAAa;AACjB,IAAI,mDAAa;AACjB,6DAA6D,wCAAwC,IAAI;AACzG,iFAAiF,oBAAoB;AACrG,6FAA6F,oBAAoB;AACjH;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;;;;AC1EA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;UCdA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;;;;ACN4B;AACkC;AACxB;AACW;;;AAGjD;AACA;AACA;AACA,yBAAyB,wDAAO;AAChC;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sDAAI;AACvB;AACA,kBAAkB,sDAAU;AAC5B,CAAC;;;AAGD;AACA,iBAAiB,mDAAE;AACnB,cAAc,sDAAU;AACxB,EAAE,kEAAa;AACf;AACA;AACA,CAAC","file":"app.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { setLocalStorage, store } from './storage';\nimport { removeChildDOM } from './Todos';\n\nexport const deleteProject = () => {\n  const deleteBtns = document.querySelectorAll('.deleteProject');\n  deleteBtns.forEach(deleteBtn => {\n    deleteBtn.addEventListener('click', (e) => {\n      e.stopPropagation();\n      store.forEach((obj, idx) => {\n        if (obj.projectName === deleteBtn.dataset.name) {\n          store.splice(idx, 1);\n          setLocalStorage();\n          removeChildDOM((deleteBtn.dataset.name).split(' ').join(''));\n        }\n      });\n    });\n  });\n};\n\nclass Project {\n  constructor(projectName) {\n    this.projectName = projectName;\n    this.projectContent = document.querySelector('.project-content');\n  }\n\n  get showName() {\n    return `\n              <li class=\"project list-group-item\">${this.projectName}</li>\n            `;\n  }\n\n\n  storeProjectName() {\n    store.push({\n      projectName: `${this.projectName}`,\n      id: store.length,\n      todos: [],\n    });\n  }\n\n  renderProject() {\n    this.projectContent.insertAdjacentHTML('afterbegin', this.showName);\n    this.storeProjectName();\n    setLocalStorage();\n  }\n}\n\nexport default Project;\n","import { setLocalStorage, store } from './storage';\n// import { projectIdx } from './Ui';\n\nexport const sanitizeName = (text) => text.split(' ').join('');\n\nexport const removeChildDOM = (idx) => {\n  const child = document.querySelector(`#${idx}`);\n  child.remove();\n};\n\nconst editForm = () => (`\n          <form>\n            <label>title\n              <input type=\"text\" class=\"todo-title form-control edit-title\"></input>\n            </label>\n            <label>\n              description\n              <input type=\"text\" class=\"todo-title form-control edit-description\"></input>\n            </label>\n            <label> Due Date\n              <input type=\"date\" class=\"todo-title form-control edit-date\"></input>\n            </label>\n            <select name=\"edit-priority\" id=\"edit-priority\" class=\"form-control\">\n              <option value=\"high\">High</option>\n              <option value=\"medium\">medium</option>\n              <option value=\"low\">low</option>\n          </select>\n            <button type=\"submit\" class=\"edit-form-btn btn btn-primary\">Edit</button>\n          </form>\n          `\n);\n\n// const completedTask = () => {\n//   const btns = document.querySelectorAll('.complete-btn');\n\n//   btns.forEach(btn => {\n//     btn.addEventListener('click', e => {\n//       const card = document.querySelector(`#${e.target.dataset.sucess}`);\n//       card.classList.toggle('border');\n//       card.classList.toggle('border-success');\n//     });\n//   });\n// };\n\nconst changeValues = (projectIdx, idx) => {\n  const editBtn = document.querySelector('.edit-form-btn');\n  editBtn.addEventListener('click', () => {\n    const editedTitle = document.querySelector('.edit-title').value;\n    const editedDescription = document.querySelector('.edit-description').value;\n    const editedDate = document.querySelector('.edit-date').value;\n    const editedPriority = document.querySelector('#edit-priority').value;\n    store[projectIdx].todos[idx].title = editedTitle;\n    store[projectIdx].todos[idx].description = editedDescription;\n    store[projectIdx].todos[idx].dueDate = editedDate;\n    store[projectIdx].todos[idx].priority = editedPriority;\n    setLocalStorage();\n  });\n};\n\nexport const editTask = (projectIdx) => {\n  const btns = document.querySelectorAll('.edit-btn');\n  const editForms = [...document.querySelectorAll('.edit-form')].reverse();\n\n  btns.forEach(btn => {\n    btn.addEventListener('click', e => {\n      const todoIndex = store[projectIdx]\n        .todos\n        .findIndex(todo => sanitizeName(todo.title) === e.target.dataset.edit);\n      editForms[todoIndex].insertAdjacentHTML('afterbegin', editForm());\n\n      changeValues(projectIdx, todoIndex);\n    });\n  });\n};\n\nexport const deleteButton = (projectIdx) => {\n  const data = document.querySelectorAll('.del-data');\n  data.forEach(btn => {\n    btn.addEventListener('click', e => {\n      const idxToDelete = store[projectIdx]\n        .todos.findIndex(td => td.title === e\n          .target.dataset.name);\n      removeChildDOM(sanitizeName(e.target.dataset.name));\n      store[projectIdx].todos.splice(idxToDelete, 1);\n      setLocalStorage();\n    });\n  });\n};\n\nclass Todo {\n  constructor(title, description, dueDate, priority) {\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.todoContent = document.querySelector('.todos-content');\n    // this.index = projectIdx;\n  }\n\n  get showContent() {\n    return `\n    <div class=\"edit-form\"></div>\n      <div class=\"card border-primary row\" id=\"${sanitizeName(this.title)}\">\n        <div class=\"card-body col-8\">\n          <ul class=\"list-group list-group-flush\">\n            <h1 class=\"list-group-item\">Title: ${this.title}</h1>\n            <li class=\"list-group-item\">Description: ${this.description}</li>\n            <li class=\"list-group-item\">Due_Date: ${this.dueDate}</li>\n            <li class=\"list-group-item\">Priority: ${this.priority}</li>\n          </ul>\n          <button class=\"btn btn-outline-danger del-data\" data-name=\"${this.title}\">Delete</button>\n          <button class=\"btn btn-outline-success complete-btn\" data-sucess=\"${sanitizeName(this.title)}\">Completed task</button>\n          <button class=\"btn btn-outline-warning edit-btn\" data-edit=\"${sanitizeName(this.title)}\">Edit</button>\n        </div>\n      </div>\n        `;\n  }\n\n  storeTodo(projectIdx) {\n    store[projectIdx].todos.push({\n      title: this.title,\n      description: this.description,\n      dueDate: this.dueDate,\n      priority: this.priority,\n    });\n    setLocalStorage();\n  }\n\n  renderTodo(projectIdx) {\n    this.todoContent.insertAdjacentHTML('afterbegin', this.showContent);\n    this.storeTodo(projectIdx);\n    deleteButton(projectIdx);\n    editTask(projectIdx);\n  }\n}\n\nexport default Todo;\n","import { populateStore, store } from './storage';\nimport { sanitizeName, editTask, deleteButton } from './Todos';\n\nexport let projectIdx = 0;\n\nexport default class Ui {\n  constructor() {\n    this.projectContent = document.querySelector('.project-content');\n    this.todosConent = document.querySelector('.todos-content');\n  }\n\n  addBtn() {\n    const addBtns = document.querySelectorAll('.addTodo');\n    const todoForm = document.querySelector('.todo-form');\n\n    addBtns.forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        todoForm.classList.remove('d-none');\n        projectIdx = store.findIndex(pj => pj.projectName === e.target.dataset.name);\n        this.displayTodos();\n      });\n    });\n  }\n\n  showTodos() {\n    const projects = document.querySelectorAll('.project');\n\n    projects.forEach(project => {\n      project.addEventListener('click', e => {\n        e.stopPropagation();\n        projectIdx = store.findIndex(pj => sanitizeName(pj.projectName) === e.target.id);\n        this.displayTodos();\n      });\n    });\n  }\n\n  displayTodos() {\n    this.todosConent.innerHTML = '';\n    store[projectIdx].todos.forEach(todo => {\n      const todoCard = `\n      <div class=\"edit-form\"></div>\n      <div class=\"card border-primary  row\" id=\"${sanitizeName(todo.title)}\">\n        <div class=\"card-body col-8\">\n          <ul class=\"list-group list-group-flush\">\n            <h1 class=\"list-group-item\">Title:  ${todo.title}</h1>\n            <li class=\"list-group-item\">Description:  ${todo.description}</li>\n            <li class=\"list-group-item\">Due_date:  ${todo.dueDate}</li>\n            <li class=\"list-group-item\">priority: ${todo.priority}</li>\n          </ul>\n          <button class=\"btn btn-outline-danger del-data\" data-name=\"${todo.title}\">Delete</button>\n          <button class=\"btn btn-outline-success complete-btn\" data-sucess=\"${todo.title}\">Completed task</button>\n          <button class=\"btn btn-outline-warning edit-btn\" data-edit=\"${sanitizeName(todo.title)}\">Edit</button>\n        </div>\n      </div>\n        `;\n      this.todosConent.insertAdjacentHTML('afterbegin', todoCard);\n    });\n    deleteButton(projectIdx);\n    editTask(projectIdx);\n    // todos.completedTask();\n  }\n\n\n  renderUi() {\n    populateStore();\n    store.forEach(project => {\n      const li = `<li class=\"project list-group-item\"  id=\"${project.projectName.split(' ').join('')}\">${project.projectName}\n      <i class=\"fa fa-plus float-right addTodo\" aria-hidden=\"true\" data-name= \"${project.projectName}\"></i>\n      <i class=\"fas fa-times float-right mr-4 deleteProject\" aria-hidden=\"true\" data-name=\"${project.projectName}\"></i>\n      </li>`;\n      this.projectContent.insertAdjacentHTML('afterbegin', li);\n    });\n  }\n}\n","const store = [\n];\n\nconst setLocalStorage = () => {\n  window.localStorage.setItem('todos', JSON.stringify(store));\n};\n\nconst populateStore = () => {\n  const colletion = JSON.parse(window.localStorage.getItem('todos'));\n  if (colletion) {\n    colletion.forEach(el => {\n      store.push(el);\n    });\n  }\n};\n\nexport { setLocalStorage, populateStore, store };","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './scss/styles.scss';\nimport Project, { deleteProject } from './components/Project';\nimport Todo from './components/Todos';\nimport Ui, { projectIdx } from './components/Ui';\n\n\nconst data = document.querySelector('.submit-btn');\ndata.addEventListener('click', () => {\n  const ProjectTitle = document.querySelector('input').value;\n  const newProject = new Project(ProjectTitle);\n  newProject.renderProject();\n});\n\nconst todoBtm = document.querySelector('.hitme');\ntodoBtm.addEventListener('click', (e) => {\n  const todoForm = document.querySelector('.todo-form');\n  e.preventDefault();\n  const title = document.querySelector('.todo-title').value;\n  const description = document.querySelector('.todo-description').value;\n  const dueDate = document.querySelector('.todo-due-date').value;\n  const priority = document.querySelector('#priority').value;\n  const todo = new Todo(title, description, dueDate, priority);\n  todoForm.classList.add('d-none');\n  todo.renderTodo(projectIdx);\n});\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const UI = new Ui();\n  UI.renderUi(projectIdx);\n  deleteProject();\n  UI.addBtn();\n  UI.showTodos();\n});\n"],"sourceRoot":""}