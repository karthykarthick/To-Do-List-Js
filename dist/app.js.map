{"version":3,"sources":["webpack://To-Do-List-Js/./src/scss/styles.scss?57ea","webpack://To-Do-List-Js/./src/components/Project.js","webpack://To-Do-List-Js/./src/components/Todos.js","webpack://To-Do-List-Js/./src/components/Ui.js","webpack://To-Do-List-Js/./src/components/common.js","webpack://To-Do-List-Js/./src/components/storage.js","webpack://To-Do-List-Js/webpack/bootstrap","webpack://To-Do-List-Js/webpack/runtime/define property getters","webpack://To-Do-List-Js/webpack/runtime/hasOwnProperty shorthand","webpack://To-Do-List-Js/webpack/runtime/make namespace object","webpack://To-Do-List-Js/./src/index.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","/* eslint-disable class-methods-use-this */\nimport { setLocalStorage, store } from './storage';\nimport { storeProject, deleteElementFromDOM, getProjectIndex } from './common';\n\nexport default class Project {\n  constructor(name) {\n    this.name = name;\n  }\n\n  deleteProject() {\n    const btns = document.querySelectorAll('.delete-pj-btn');\n    btns.forEach(btn => {\n      btn.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const projectIndex = getProjectIndex(e.target.dataset.id);\n        store.splice(projectIndex, 1);\n        setLocalStorage();\n        deleteElementFromDOM(e.target.dataset.id);\n      });\n    });\n  }\n\n  saveProject() {\n    storeProject(this.name);\n    setLocalStorage();\n  }\n}\n","/* eslint-disable class-methods-use-this */\nimport {\n  getProjectIndex,\n  deleteElementFromDOM,\n  storeTodos,\n  displayTodoForm,\n  getTaskIndex,\n  getBtns,\n  renderTodos,\n  updateTodo,\n} from './common';\nimport { store, setLocalStorage, currentIndex } from './storage';\n\nconst editForm = () => (`\n        <div class=\"container\">\n          <form>\n            <label>title\n              <input type=\"text\" class=\"form-control edit-title\"></input>\n            </label>\n            <label>\n              description\n              <input type=\"text\" class=\"form-control edit-description\"></input>\n            </label>\n            <label> Due Date\n              <input type=\"date\" class=\"form-control edit-date\"></input>\n            </label>\n            <label class=\"form-label\">\n              <select name=\"edit-priority\" id=\"edit-priority\" class=\"form-control\">\n                <option value=\"high\">High</option>\n                <option value=\"medium\">medium</option>\n                <option value=\"low\">low</option>\n            </select>\n          </label>\n            <button type=\"submit\" class=\"edit-form-btn btn btn-success\">Edit</button>\n          </form>\n        </div>\n          `\n);\n\nconst updateTask = () => {\n  const editBtn = document.querySelector('.edit-form-btn');\n\n  editBtn.addEventListener('click', () => {\n    const editedTitle = document.querySelector('.edit-title').value;\n    const editedDescription = document.querySelector('.edit-description').value;\n    const editedDate = document.querySelector('.edit-date').value;\n    const editedPriority = document.querySelector('#edit-priority').value;\n\n    updateTodo(editedTitle, editedDescription, editedDate, editedPriority);\n    setLocalStorage();\n  });\n};\n\nconst btnText = (text) => (text === 'Complete' ? 'Uncomplete' : 'Complete');\n\nexport default class Todos {\n  constructor(title, description, dueDate, priority) {\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.todoForm = document.querySelector('.todo-form-container');\n    this.todos = document.querySelector('.todos-container');\n    this.editformContainer = document.querySelector('.todo-edit-form-container');\n  }\n\n  showForm() {\n    const addBtns = getBtns('.add-todo-btn');\n\n    addBtns.forEach(btn => {\n      btn.addEventListener('click', e => {\n        e.stopPropagation();\n        displayTodoForm(this.todoForm);\n        currentIndex.id = getProjectIndex(e.target.dataset.id);\n        renderTodos(this.todos);\n        this.deleteTodo();\n      });\n    });\n  }\n\n  deleteTodo() {\n    const deleteBtns = getBtns('.btn-delete-task');\n    deleteBtns.forEach(btn => {\n      btn.addEventListener('click', e => {\n        e.stopPropagation();\n        const selectedTask = getTaskIndex(e.target.dataset.id);\n        store[currentIndex.id].todos.splice(selectedTask, 1);\n        deleteElementFromDOM(e.target.dataset.id);\n        setLocalStorage();\n      });\n    });\n  }\n\n  completeTask() {\n    const completeBtns = document.querySelectorAll('.btn-complete-task');\n    completeBtns.forEach(btn => {\n      btn.addEventListener('click', e => {\n        const card = document.querySelector(`#${e.target.dataset.id}`);\n        card.classList.toggle('border-success');\n        e.target.innerHTML = btnText(e.target.innerHTML);\n      });\n    });\n  }\n\n  saveTodo() {\n    storeTodos(this.title, this.description, this.dueDate, this.priority);\n    setLocalStorage();\n  }\n\n  showEditForm() {\n    this.editformContainer.insertAdjacentHTML('afterbegin', editForm());\n  }\n\n  editform() {\n    const editBtns = getBtns('.btn-edit-task');\n\n    editBtns.forEach(btn => {\n      btn.addEventListener('click', e => {\n        currentIndex.taskId = getTaskIndex(e.target.dataset.id);\n        this.showEditForm();\n        updateTask();\n      });\n    });\n  }\n}\n","import { currentIndex } from './storage';\nimport { renderProjects, getProjectIndex, renderTodos } from './common';\nimport Project from './Project';\nimport Todos from './Todos';\n\nconst pj = new Project();\nconst newTodo = new Todos();\n\nexport default class Ui {\n  constructor() {\n    this.projectContainer = document.querySelector('.project-list');\n    this.todos = document.querySelector('.todos-container');\n  }\n\n  showTodos() {\n    const projects = document.querySelectorAll('ul li');\n\n    projects.forEach(project => {\n      project.addEventListener('click', e => {\n        e.stopPropagation();\n        currentIndex.id = getProjectIndex(e.target.id);\n        renderTodos(this.todos);\n        newTodo.deleteTodo();\n        newTodo.editform();\n        newTodo.completeTask();\n      });\n    });\n  }\n\n  renderProject() {\n    this.projectContainer.textContent = '';\n    renderProjects(this.projectContainer);\n    pj.deleteProject();\n    newTodo.showForm();\n  }\n}","import { store, currentIndex } from './storage';\n\nconst storeProject = (projectName) => {\n  store.push({\n    projectName,\n    todos: [],\n  });\n};\n\nconst storeTodos = (title, description, date, priority) => store[currentIndex.id]\n  .todos\n  .push(\n    {\n      title,\n      description,\n      date,\n      priority,\n    },\n  );\n\nconst sanitizeId = (text) => text.split(' ').join('');\n\nconst updateTodo = (newTitle, newDescription, newDate, newPriority) => {\n  store[currentIndex.id].todos[currentIndex.taskId].title = newTitle;\n  store[currentIndex.id].todos[currentIndex.taskId].description = newDescription;\n  store[currentIndex.id].todos[currentIndex.taskId].date = newDate;\n  store[currentIndex.id].todos[currentIndex.taskId].priority = newPriority;\n};\n\nconst renderProjects = (container) => {\n  store.forEach(project => {\n    const li = `\n                <li class=\"list-group-item\" id=\"${sanitizeId(project.projectName)}\">${project.projectName}\n                  <span class=\"float-right\">\n                    <i class=\"fa fa-times mr-2 delete-pj-btn\" data-id=\"${sanitizeId(project.projectName)}\"></i>\n                    <i class=\"fas fa-plus mr-4 add-todo-btn\" data-id=\"${sanitizeId(project.projectName)}\"></i>\n\n                  </span>\n                </li>\n                `;\n    container.insertAdjacentHTML('afterbegin', li);\n  });\n};\n\nconst renderTodos = (container) => {\n  container.innerHTML = '';\n  store[currentIndex.id].todos.forEach(todo => {\n    const card = `\n      <div class=\"card\" id=\"${sanitizeId(todo.title)}\">\n        <h2 class=\"h2\">${todo.title}</h2>\n        <p>${todo.description}</p>\n        <p>Due Date: ${todo.date}</p>\n        <span>priority: ${todo.priority}</span>\n        <div>\n          <div class=\"btn btn-success btn-complete-task\" data-id=\"${sanitizeId(todo.title)}\">Complete</div>\n          <div class=\"btn btn-warning btn-edit-task\" data-id=\"${sanitizeId(todo.title)}\">Edit</div>\n          <div class=\"btn btn-danger btn-delete-task\" data-id=\"${sanitizeId(todo.title)}\">Delete</div>\n        </div>\n      </div>\n    `;\n    container.insertAdjacentHTML('afterbegin', card);\n  });\n};\n\nconst deleteElementFromDOM = (id) => document.querySelector(`#${id}`).remove();\n\nconst getProjectIndex = (id) => store.findIndex(pj => sanitizeId(pj.projectName) === id);\nconst getTaskIndex = (id) => store[currentIndex.id]\n  .todos\n  .findIndex(task => sanitizeId(task.title) === id);\n\nconst displayTodoForm = (element) => element.classList.add('show');\nconst hideTodoForm = (element) => element.classList.remove('show');\nconst getBtns = (classElemnt) => document.querySelectorAll(`${classElemnt}`);\n\nexport {\n  storeProject,\n  storeTodos,\n  renderProjects,\n  sanitizeId,\n  getProjectIndex,\n  deleteElementFromDOM,\n  displayTodoForm,\n  hideTodoForm,\n  renderTodos,\n  getBtns,\n  getTaskIndex,\n  updateTodo,\n};","const store = [\n];\n\nconst currentIndex = { id: 0, taskId: 0 };\n\nconst setLocalStorage = () => {\n  window.localStorage.setItem('todos', JSON.stringify(store));\n};\n\nconst populateStore = () => {\n  const colletion = JSON.parse(window.localStorage.getItem('todos'));\n  if (colletion) {\n    colletion.forEach(el => {\n      store.push(el);\n    });\n  }\n};\n\nexport {\n  setLocalStorage, populateStore, store, currentIndex,\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './scss/styles.scss';\nimport Project from './components/Project';\nimport Ui from './components/Ui';\nimport Todos from './components/Todos';\nimport { populateStore } from './components/storage';\nimport { hideTodoForm } from './components/common';\n\nconst UI = new Ui();\n\nconst newProjectBtn = document.querySelector('#project-form__btn');\nconst projectName = document.querySelector('#project-form__name');\nconst todoSubmit = document.querySelector('.submit-todo');\nconst todoForm = document.querySelector('.todo-form-container');\n\n\nnewProjectBtn.addEventListener('click', e => {\n  e.preventDefault();\n  const newProject = new Project(projectName.value);\n  newProject.saveProject();\n  UI.renderProject();\n});\n\ntodoSubmit.addEventListener('click', () => {\n  // e.preventDefault();\n  const title = document.querySelector('.todo-title').value;\n  const description = document.querySelector('.todo-description').value;\n  const dueDate = document.querySelector('.todo-due-date').value;\n  const priority = document.querySelector('#priority').value;\n\n  const Todo = new Todos(title, description, dueDate, priority);\n  Todo.saveTodo();\n  hideTodoForm(todoForm);\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  populateStore();\n  UI.renderProject();\n  UI.showTodos();\n});"],"sourceRoot":""}